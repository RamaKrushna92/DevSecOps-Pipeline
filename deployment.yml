---
- name: Docker Deployment Starting...
  hosts: 54.85.26.230
  become: yes
  gather_facts: yes
  tasks:         
    - name: Get the existing information of node-app container
      community.docker.docker_container_info:
        name: node-app
      register: result
      
    - name: Does container exist?
      debug:
        msg: The container {{ 'exists' if result.exists else 'does not exist' }}
      when: result.exists
      
    - name: Stop a container
      community.docker.docker_container:
        name: node-app
        state: stopped
      when: result.exists
      
    - name: Remove container
      community.docker.docker_container:
        name: node-app
        state: absent
      when: result.exists
      
    - name: Remove docker image
      community.docker.docker_image:
        name: krishnachennaidocker/node-app-image:jenkins-2
        state: absent
      
    - name: Pull Image and Start Docker Container
      community.docker.docker_container:
        name: node-app
        image: krishnachennaidocker/node-app-image:jenkins-2
        state: started
        published_ports:
          - 3000:3000
          
    - name: Checking the container status...
      community.docker.docker_container_info:
        name: node-app
      register: result

    - name: Does container exist..?
      debug:
        msg: The container {{ 'exists' if result.exists else 'does not exist' }}
      when: result.exists

    - name: Printing the container name..
      ansible.builtin.debug:
        msg: "Container name is {{ result.stdout | from_json | json_query('[0].Name') }}"
       when: result.exists

    - name: Printing container status..
      ansible.builtin.debug:
        msg: "Container status is {{ result.stdout | from_json | json_query('[0].State.Status') }}"
       when: result.exists

    - name: Print container port number..
      ansible.builtin.debug:
        msg: "Container port is {{ result.stdout | from_json | json_query('[0].NetworkSettings.Ports') }}"
       when: result.exists

    - name: Print all container details..
      ansible.builtin.debug:
        var: result.stdout | from_json
      when: result.exists
